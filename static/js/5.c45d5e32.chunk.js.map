{"version":3,"sources":["App.js"],"names":["StagAccordion","lazy","unordered","require","config","Object","keys","sort","reduce","obj","key","App","mainFile","searchFile","useState","search","setSearch","style","position","marginLeft","marginRight","marginTop","id","label","margin","placeholder","fullWidth","value","onChange","event","target","InputLabelProps","shrink","forEach","company","push","color","un","or","device","fallback","name","maintainer","codename","url","download","toLowerCase","indexOf","length"],"mappings":"oKAKMA,EAAgBC,gBAAK,kBAAM,sDAG7BC,EAAYC,EAAQ,IAElBC,EAASC,OAAOC,KAAKJ,GACxBK,OACAC,QAAO,SAACC,EAAKC,GAEZ,OADAD,EAAIC,GAAOR,EAAUQ,GACdD,IACN,IAwGUE,UApGf,WACE,IAAIC,EAAW,GACXC,EAAa,GACjB,EAA0BC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,OACE,sBACEC,MAAO,CACLC,SAAU,SACVC,WAAY,MACZC,YAAa,MACbC,UAAW,OALf,UAQE,cAAC,IAAD,CACEC,GAAG,sBACHC,MAAM,SACNN,MAAO,CAAEO,OAAQ,GACjBC,YAAY,qBACZC,WAAS,EACTF,OAAO,SACPG,MAAOZ,EACPa,SAAU,SAACC,GACT,IAAQF,EAAUE,EAAMC,OAAhBH,MACRX,EAAUW,IAGZI,gBAAiB,CACfC,QAAQ,KAGX3B,OAAOC,KAAKF,GAAQ6B,SAAQ,SAACC,GAC5BtB,EAASuB,KACP,oBAAkBlB,MAAO,CAAEmB,MAAO,WAAlC,SACGF,GADMA,IAIX,IAAIG,EAAKjC,EAAO8B,GACVI,EAAKjC,OAAOC,KAAK+B,GACpB9B,OACAC,QAAO,SAACC,EAAKC,GAEZ,OADAD,EAAIC,GAAO2B,EAAG3B,GACPD,IACN,IACL,IAAK,IAAI8B,KAAUD,EACjB1B,EAASuB,KACP,cAAC,WAAD,CAAUK,SA1DK,wCA0Df,SACE,cAACxC,EAAD,CAEEyC,KAAMrC,EAAO8B,GAASK,GAAQG,WAC9BC,SAAUJ,EACVA,OAAQnC,EAAO8B,GAASK,GAAQA,OAChCK,IAAKxC,EAAO8B,GAASK,GAAQM,UAJxBN,SAUdxB,EACGV,OAAOC,KAAKF,GAAQ6B,SAAQ,SAACC,GAC3B,IAAIG,EAAKjC,EAAO8B,GACVI,EAAKjC,OAAOC,KAAK+B,GACpB9B,OACAC,QAAO,SAACC,EAAKC,GAEZ,OADAD,EAAIC,GAAO2B,EAAG3B,GACPD,IACN,IACL,IAAK,IAAI8B,KAAUD,GAEyC,IAAxDC,EAAOO,cAAcC,QAAQhC,EAAO+B,iBACqB,IAAzDZ,EAAQY,cAAcC,QAAQhC,EAAO+B,iBAGC,IAFtC1C,EAAO8B,GAASK,GAAQA,OACrBO,cACAC,QAAQhC,EAAO+B,gBAElBjC,EAAWsB,KACT,cAACnC,EAAD,CAEEyC,KAAMrC,EAAO8B,GAASK,GAAQE,KAC9BE,SAAUJ,EACVA,OAAQnC,EAAO8B,GAASK,GAAQA,QAH3BA,OASf,GACHxB,EACCF,EAAWmC,QAAU,EACnB,kDAEAnC,EAGFD,EAEF,4B","file":"static/js/5.c45d5e32.chunk.js","sourcesContent":["import \"./App.css\";\n// import StagAccordion from \"./components/StagAccordion\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState, lazy, Suspense } from \"react\";\n\nconst StagAccordion = lazy(() => import(\"./components/StagAccordion\"));\nconst renderLoader = () => <p>Loading</p>;\n\nlet unordered = require(\"./data/devices.json\");\n\nconst config = Object.keys(unordered)\n  .sort()\n  .reduce((obj, key) => {\n    obj[key] = unordered[key];\n    return obj;\n  }, {});\n\n//console.log(config);\n\nfunction App() {\n  let mainFile = [];\n  let searchFile = [];\n  let [search, setSearch] = useState(\"\");\n  return (\n    <div\n      style={{\n        position: \"center\",\n        marginLeft: \"10%\",\n        marginRight: \"10%\",\n        marginTop: \"10%\",\n      }}\n    >\n      <TextField\n        id=\"standard-full-width\"\n        label=\"Search\"\n        style={{ margin: 8 }}\n        placeholder=\"Search for Devices\"\n        fullWidth\n        margin=\"normal\"\n        value={search}\n        onChange={(event) => {\n          const { value } = event.target;\n          setSearch(value);\n          //console.log(value);\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      {Object.keys(config).forEach((company) => {\n        mainFile.push(\n          <h1 key={company} style={{ color: \"#4285f4\" }}>\n            {company}\n          </h1>\n        );\n        let un = config[company];\n        const or = Object.keys(un)\n          .sort()\n          .reduce((obj, key) => {\n            obj[key] = un[key];\n            return obj;\n          }, {});\n        for (let device in or) {\n          mainFile.push(\n            <Suspense fallback={renderLoader()}>\n              <StagAccordion\n                key={device}\n                name={config[company][device].maintainer}\n                codename={device}\n                device={config[company][device].device}\n                url={config[company][device].download}\n              ></StagAccordion>\n            </Suspense>\n          );\n        }\n      })}\n      {search\n        ? Object.keys(config).forEach((company) => {\n            let un = config[company];\n            const or = Object.keys(un)\n              .sort()\n              .reduce((obj, key) => {\n                obj[key] = un[key];\n                return obj;\n              }, {});\n            for (let device in or) {\n              if (\n                device.toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n                company.toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n                config[company][device].device\n                  .toLowerCase()\n                  .indexOf(search.toLowerCase()) !== -1\n              ) {\n                searchFile.push(\n                  <StagAccordion\n                    key={device}\n                    name={config[company][device].name}\n                    codename={device}\n                    device={config[company][device].device}\n                  ></StagAccordion>\n                );\n              }\n            }\n          })\n        : \"\"}\n      {search ? (\n        searchFile.length <= 0 ? (\n          <h1>No results found</h1>\n        ) : (\n          searchFile\n        )\n      ) : (\n        mainFile\n      )}\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}